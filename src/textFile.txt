1. 9876786545
2. 9878675434
3. 9887677512
4. 8983409876
5. 9778712345
6. 9988776690
7. 9878654543
8. 9390900909
9. 9390900912

10. 9893821234

11. 8798123212
12. 9897656564

// import React, { useState } from "react";
// import "../stylesheets/SignIn.css";
// import signInEmp from "../images/signInEmp.png";
// import wavinghand from "../images/waving-hand.png";
// import { Link } from "react-router-dom";
// import axios from "axios";
// import { useNavigate } from "react-router-dom";
// import { useAuth } from "./AuthContext";

// const baseUrl = "https://qi0vvbzcmg.execute-api.ap-south-1.amazonaws.com/api";

// const SignIn = () => {
//   const { setUser } = useAuth();

//   const navigate = useNavigate();
//   const [isLogin, setIsLogin] = useState(true);
//   const [loading, setLoading] = useState(false);
//   const [formData, setFormData] = useState({
//     mobileNumber: "",
//     otp: "",
//     otpVerified: false,
//     userId: "",
//   });

//   const handleChange = (e) => {
//     const { name, value } = e.target;
//     setFormData((prev) => ({ ...prev, [name]: value }));
//   };

//   const sendOtp = async () => {
//     if (!formData.mobileNumber) {
//       alert("Please enter a mobile number");
//       return;
//     }

//     setLoading(true);
//     try {
//       console.log("Sending OTP to:", formData.mobileNumber);
//       const response = await axios.post(
//         `${baseUrl}/mobileNumberVerificationSendOtp`,
//         {
//           mobileNumber: formData.mobileNumber,
//           isForLogin: 1,
//         }
//       );

//       console.log("OTP Send Response:", response.data);
//       if (response.data.status === 200) {
//         alert(response.data.message);
//         setFormData((prev) => ({
//           ...prev,
//           userId: response.data.resp,
//         }));
//       }
//     } catch (error) {
//       console.error("Error sending OTP:", error);
//       alert("Failed to send OTP");
//     }
//     setLoading(false);
//   };

//   const checkMobileNumber = async () => {
//     if (!formData.mobileNumber) {
//       alert("Please enter a mobile number");
//       return;
//     }

//     setLoading(true);
//     try {
//       console.log(`Checking mobile number: ${formData.mobileNumber}`);
//       const response = await axios.post(`${baseUrl}/register`, {
//         mobileNumber: formData.mobileNumber,
//       });

//       console.log("Check Mobile Response:", response.data);

//       if (response.data.message === "Registration Successfully") {
//         console.log("Mobile is registered, verifying OTP...");
//         verifyOtp();
//       } else {
//         alert("Number not registered, please sign up!");
//       }
//     } catch (error) {
//       console.error("Error checking mobile number:", error);
//       alert("Failed to check mobile number");
//     }
//     setLoading(false);
//   };

//   const verifyOtp = async () => {
//     if (!formData.otp) {
//       alert("Please enter the OTP");
//       return;
//     }

//     setLoading(true);
//     try {
//       console.log("Verifying OTP:", formData.otp);
//       if (formData.otp === "1234") {
//         alert("Login Successful");
//         setFormData((prev) => ({ ...prev, otpVerified: true }));
//       } else {
//         alert("Wrong OTP");
//       }
//     } catch (error) {
//       console.error("OTP verification failed:", error);
//       alert("OTP verification failed");
//     }
//     setLoading(false);
//   };
  
  

//   return (
//     <div className="signinBox">
//       <div className="signin-container">
//         <div className="left-box">
//           <div className="signin-left">
//             <img src={signInEmp} alt="Sign In" />
//             <h3>
//               {isLogin ? "Find Immediate Joiners for You" : "Let Job Find You"}
//             </h3>
//             <p>
//               you will never know everything <br /> But you will Know more
//             </p>
//           </div>
//         </div>

//         <div className="right-form">
//           <div className="right-form-head">
//             <img src={wavinghand} alt="Hello" className="hello-icon" />
//             <h2>Welcome back!</h2>
//             <p>Please login to access your account</p>
//           </div>

//           <div className="signInRight">
//             <div className="signInForm">
//               <div className="signIn-toggle">
//                 <button
//                   className={isLogin ? "active signBtn" : ""}
//                   onClick={() => setIsLogin(true)}
//                 >
//                   Employer
//                 </button>
//                 <button
//                   className={!isLogin ? "active signBtn" : ""}
//                   onClick={() => setIsLogin(false)}
//                 >
//                   Employee
//                 </button>
//               </div>

//               <div className="form">
//                 <div className="form-group">
//                   <label htmlFor="mobile">Mobile Number</label>
//                   <div className="input-otp">
//                     <input
//                       type="number"
//                       name="mobileNumber"
//                       placeholder="Enter your mobile number"
//                       maxLength={10}
//                       value={formData.mobileNumber}
//                       onChange={handleChange}
//                     />
//                     <button onClick={sendOtp}>Send OTP</button>
//                   </div>
//                 </div>

//                 <div className="form-group">
//                   <label htmlFor="otp">OTP</label>
//                   <input
//                     type="password"
//                     name="otp"
//                     placeholder="Enter OTP"
//                     maxLength={4}
//                     value={formData.otp}
//                     onChange={handleChange}
//                   />
//                 </div>

//                 <div className="login-btn">
//                   <button onClick={checkMobileNumber}>Login</button>
//                   <p>
//                     Don't have an account?{" "}
//                     <Link to="/signup">Register Now</Link>
//                   </p>
//                 </div>
//               </div>
//             </div>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default SignIn;





// ________------------________------__________-------__________-------_________++++++++++__________==========_________

This code is manifest.json 

{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

// ________------------________------__________-------__________-------_________++++++++++__________==========_________

// import React from "react";
// import "../stylesheets/Home.css";
// import k5Img from "../images/Group 2.png";
// import amazon from "../images/Amazon.png";
// import paytm from "../images/Paytm.png";
// import uber from "../images/Uber.png";
// import adani from "../images/Adani.png";
// import airbnb from "../images/Airbnb.png";
// import spotify from "../images/Spotify.png";
// import ActiveJoinerCard from "./cards/ActiveJoinerCard";
// import activejoinerData from "../components/cards/activeJoinerData";
// import HuntLocationCard from "./cards/HuntLocationCard";
// import locationCardData from "../components/cards/locationCardData";
// import StackCard from "./cards/StackCard";
// import stackData from "./cards/stackData";
// import experienceData from "./cards/experienceData";
// import HuntExperience from "./cards/HuntExperience";
// import HomeAbout from "./cards/HomeAbout";
// import { IoIosSearch } from "react-icons/io";

// const Home = () => {
//   return (
//     <>
//       <div className="home-sec">
//         <div className="home-box">
//           <div className="main-section">
//             <h4>#1 Job Portal</h4>
//             <h1>Your Dream Career Starts here</h1>
//             <p>
//               <span>Job Hunting Made Easy:</span> Get Instant Alerts <br /> For
//               Jobs Matching Your Skills & Innovative Job Finder
//             </p>
//             <form className="home-search">
//               <div className="input-wrapper">
//                 <IoIosSearch className="search-icon" />
//                 <input type="text" placeholder="Job title keywords..." />
//               </div>
//               <button type="submit">Find Now</button>
//             </form>
//             <img src={k5Img} alt="" />
//           </div>
//           <div className="home-second-box">
//             <h5>
//               Brands you Admire and Dream of working with are <span>here!</span>
//             </h5>
//             <div className="main-sec-brands">
//               <img src={amazon} alt="amazon image" />
//               <img src={paytm} alt="paytm image" />
//               <img src={uber} alt="uber image" />
//               <img src={adani} alt="adani image" />
//               <img src={airbnb} alt="airbnb image" />
//               <img src={spotify} alt="spotifyimage" />
//             </div>
//           </div>
//         </div>
//       </div>
//       <div className="avtivejoinerBox">
//         <div className="active-joiners">
//           <div className="active-head">
//             <h2>
//               Active <span>Joiners</span>
//             </h2>
//             <p>(Can join withing 30days)</p>
//           </div>
//           <div className="active-viewmore">
//             <a href="/empfilter">View More</a>
//           </div>
//         </div>
//         <div className="activejoiner-cardbox">
//           {activejoinerData.map((item, index) => (
//             <a href="/candidate">
//               <ActiveJoinerCard
//                 key={index}
//                 image={item.image}
//                 name={item.name}
//                 currentPosition={item.currentPosition}
//                 salary={item.salary}
//                 expYear={item.expYear}
//               />
//             </a>
//           ))}
//         </div>
//       </div>
//       <div className="huntByLocation">
//         <div className="huntHeadBox">
//           <h2>
//             <span>Hunt By</span> Location
//           </h2>
//           <div className="active-viewmore">
//             <a href="/empfilter">View More</a>
//           </div>
//         </div>
//         <div className="huntlocationBox">
//           {locationCardData.map((item, index) => (
//             <HuntLocationCard
//               key={index}
//               honelocationIcons={item.honelocationIcons}
//               locationName={item.locationName}
//             />
//           ))}
//         </div>
//       </div>

//       <div className="huntByLocation">
//         <div className="huntHeadBox">
//           <h2>
//             <span>Hunt By</span> Technology Stack
//           </h2>
//           <div className="active-viewmore">
//             <a href="/empfilter">View More</a>
//           </div>
//         </div>
//         <div className="huntstackBox">
//           {stackData.map((item, index) => (
//             <StackCard
//               key={index}
//               stackImg={item.stackImg}
//               stackName={item.stackName}
//             />
//           ))}
//         </div>
//       </div>

//       <div className="huntByExperience">
//         <div className="experienceHeadBox">
//           <h2>
//             <span>Hunt By</span> Experience
//           </h2>
//         </div>
//         <div className="huntExperiemceBox">
//           {experienceData.map((item, index) => (
//             <HuntExperience
//               key={index}
//               heading={item.heading}
//               subheading={item.subheading}
//             />
//           ))}
//         </div>
//       </div>

//       <HomeAbout />
//     </>
//   );
// };

// export default Home;

// ________------------________------__________-------__________-------_______








import { useState } from "react";
import axios from "axios";

const BASE_URL = "https://qi0vvbzcmg.execute-api.ap-south-1.amazonaws.com/employer";

const EmployerSignup = () => {
  const [formData, setFormData] = useState({
    fullName: "",
    mobileNumber: "",
    otp: "",
    currentRole: "",
    companyName: "",
    email: "",
    location: "",
    companySize: "",
    userId: "",
    otpVerified: false,
  });
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.id]: e.target.value });
  };

  const sendOtp = async () => {
    if (!formData.mobileNumber) {
      alert("Please enter a mobile number");
      return;
    }
    setLoading(true);
    try {
      const response = await axios.post(`${BASE_URL}/mobileNumberVerificationSendOtp`, {
        mobileNumber: formData.mobileNumber,
        isForLogin: 0,
      });
      if (response.data.status === 200) {
        alert("OTP Sent Successfully");
        setFormData((prev) => ({ ...prev, userId: response.data.result }));
      }
    } catch (error) {
      console.error("Error sending OTP:", error);
      alert("Failed to send OTP");
    }
    setLoading(false);
  };

  const verifyOtp = async () => {
    if (!formData.otp) {
      alert("Please enter the OTP");
      return;
    }
    setLoading(true);
    try {
      const response = await axios.post(`${BASE_URL}/mobileNumberVerificationSetup`, {
        mobileNumber: formData.mobileNumber,
        otp: formData.otp,
        userId: formData.userId,
      });
      if (response.data.status === 200) {
        alert("OTP Verified Successfully");
        setFormData((prev) => ({ ...prev, otpVerified: true }));
      }
    } catch (error) {
      console.error("OTP verification failed:", error);
      alert("OTP verification failed");
    }
    setLoading(false);
  };

  const handleRegister = async () => {
    if (!formData.otpVerified) {
      alert("Please verify OTP first");
      return;
    }
    setLoading(true);
    try {
      const response = await axios.post(`${BASE_URL}/register`, formData);
      if (response.data.status === 200) {
        alert("Registration Successful");
      }
    } catch (error) {
      console.error("Registration failed:", error);
      alert("Registration failed");
    }
    setLoading(false);
  };

  return (
    <div className="signUpform">
      <div className="formCols">
        <div className="formColOne">
          <div className="signUpform-emp">
            <div className="signUpform-group">
              <label>Full Name</label>
              <input type="text" id="fullName" onChange={handleChange} placeholder="Your Full Name" />
            </div>
            <div className="signUpform-group">
              <label>Mobile Number</label>
              <div className="send-otp">
                <input type="number" id="mobileNumber" onChange={handleChange} placeholder="Mobile Number" />
                <button onClick={sendOtp}>Send OTP</button>
              </div>
            </div>
            <div className="signUpform-group">
              <label>OTP</label>
              <div className="send-otp">
                <input type="password" id="otp" onChange={handleChange} placeholder="Enter OTP" />
                <button onClick={verifyOtp}>Verify OTP</button>
              </div>
            </div>
            <div className="signUpform-group">
              <label>Your Current Role</label>
              <input type="text" id="currentRole" onChange={handleChange} placeholder="Your Current Role" />
            </div>
          </div>
        </div>
        <div className="formColTwo">
          <div className="signUpform-emp">
            <div className="signUpform-group">
              <label>Company Name</label>
              <input type="text" id="companyName" onChange={handleChange} placeholder="Company Name" />
            </div>
            <div className="signUpform-group">
              <label>Email</label>
              <input type="email" id="email" onChange={handleChange} placeholder="Email" />
            </div>
            <div className="signUpform-group">
              <label>Location</label>
              <input type="text" id="location" onChange={handleChange} placeholder="Location" />
            </div>
            <div className="signUpform-group">
              <label>Company Size</label>
              <input type="text" id="companySize" onChange={handleChange} placeholder="Company Size" />
            </div>
          </div>
        </div>
      </div>
      <div className="register-btn">
        <button onClick={handleRegister}>Register Now</button>
      </div>
    </div>
  );
};

export default EmployerSignup;

////////////////===========================/////////////////////////============================/////////////////////////////

import { useState } from "react";
import axios from "axios";

const SignUpForm = () => {
  const [formData, setFormData] = useState({
    fullName: "",
    contactNumber: "",
    otp: "",
    designationName: "",
    companyName: "",
    email: "",
    location: "",
    company_SizeMin: "",
  });
  
  const [otpId, setOtpId] = useState(null);
  const [isOtpVerified, setIsOtpVerified] = useState(false);
  
  const baseUrl = "{{baseUrl}}/employer";

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const sendOtp = async () => {
    try {
      const response = await axios.post(`${baseUrl}/mobileNumberVerificationSendOtp`, {
        contactNumber: formData.contactNumber,
      });
      if (response.data.status === 200) {
        setOtpId(response.data.result);
        alert("OTP sent successfully");
      }
    } catch (error) {
      console.error("Error sending OTP", error);
    }
  };

  const verifyOtp = async () => {
    try {
      const response = await axios.post(`${baseUrl}/mobileNumberVerificationSetup`, {
        otp: formData.otp,
        id: otpId,
      });
      if (response.data.status === 200) {
        setIsOtpVerified(true);
        alert("OTP Verified Successfully");
      }
    } catch (error) {
      console.error("Error verifying OTP", error);
    }
  };

  const handleRegister = async () => {
    if (!isOtpVerified) {
      alert("Please verify OTP first");
      return;
    }
    try {
      const response = await axios.post(`${baseUrl}/register`, {
        name: formData.fullName,
        contactNumber: formData.contactNumber,
        designationName: formData.designationName,
        companyName: formData.companyName,
        email: formData.email,
        location: formData.location,
        company_SizeMin: formData.company_SizeMin,
      });
      if (response.data.status === 200) {
        alert("Registration Successful");
      }
    } catch (error) {
      console.error("Error registering user", error);
    }
  };

  return (
    <div className="signUpform">
      <div className="formCols">
        <div className="formColOne">
          <div className="signUpform-emp">
            <div className="signUpform-group">
              <label htmlFor="fullname">Full Name</label>
              <input type="text" id="fullname" name="fullName" placeholder="Your Full Name" onChange={handleChange} />
            </div>

            <div className="signUpform-group">
              <label htmlFor="mobile">Mobile Number</label>
              <div className="send-otp no-spinner">
                <input type="number" id="mobile" name="contactNumber" placeholder="Mobile Number" onChange={handleChange} />
                <button onClick={sendOtp}>Send OTP</button>
              </div>
            </div>
            <div className="signUpform-group">
              <label htmlFor="verify-otp">OTP</label>
              <div className="send-otp">
                <input type="password" id="verify-otp" name="otp" placeholder="Enter OTP" onChange={handleChange} />
                <button onClick={verifyOtp}>Verify OTP</button>
              </div>
            </div>
            <div className="signUpform-group">
              <label htmlFor="currentrole">Your Current Role</label>
              <input type="text" id="currentrole" name="designationName" placeholder="Your Current Role" onChange={handleChange} />
            </div>
          </div>
        </div>

        <div className="formColTwo">
          <div className="signUpform-emp">
            <div className="signUpform-group">
              <label htmlFor="company">Company Name</label>
              <input type="text" id="company" name="companyName" placeholder="Company Name" onChange={handleChange} />
            </div>

            <div className="signUpform-group">
              <label htmlFor="email">Email</label>
              <input type="email" id="email" name="email" placeholder="Email" onChange={handleChange} />
            </div>
            <div className="signUpform-group">
              <label htmlFor="location">Location</label>
              <input type="text" id="location" name="location" placeholder="Location" onChange={handleChange} />
            </div>
            <div className="signUpform-group">
              <label htmlFor="companysize">Company Size</label>
              <input type="text" id="companysize" name="company_SizeMin" placeholder="Company Size" onChange={handleChange} />
            </div>
          </div>
        </div>
      </div>
      <div className="register-btn">
        <div className="register-btns">
          <button onClick={handleRegister}>Register Now</button>
        </div>
      </div>
    </div>
  );
};

export default SignUpForm;
